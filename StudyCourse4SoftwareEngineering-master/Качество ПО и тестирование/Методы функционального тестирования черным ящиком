«Методы функционального тестирования черным ящиком»

Задача:
В трехмерном пространстве задано множество точек. Пересекутся ли две прямые, одна из которых проходит через две ближайшие к началу координат из заданного в пространстве 
множества точек, вторая - через две максимально удаленные.
1. Анализ предложенной задачи. Математическую модель и метод решения задачи.
1) Задать множество точек
Мин. кол-во точек 4, макс. кол-во точек – любое.
2) Проверка ближайших и максимально удаленных точек
Проверка осуществляется сравниванием длин отрезков от точки начало координат М1(0,0) до точки указанной в пространстве по формуле AB= √(x^2+y^2+z^2 ) , 
выбираем 2-е max и 2-е min удаленные точки
3) Построение векторов из пар ближайших и  пар максимально удаленных точек
Вектора строим по формуле AB= √(〖(xb-xa)〗^2+〖(yb-ya)〗^2+〖(zb- za)〗^2 )
4) Проверка на пересечение прямых из пар ближайших и  пар максимально удаленных точек
Прямые (d¬1,d2) пересекаются в том случае если они лежат в одной плоскости и при этом их векторы неколлинеарные. Для того чтобы определить находятся ли прямые в одной плоскости,
нужно взять координаты точек (x, y, z), (x1, y1, z1),  прямых (M1, M2)  и найти вектор ((M1M2) ̅) и вектора (p1,p2) показывающие направление прямых. 
В сумме вектора прямых должны дать ноль, что будет означать их нахождение в одной плоскости:  (p1*p2*(M1M2) ̅) = 0. 
Теперь проверим вектора прямых (p1,p2) на коллинеарность, нам нужно неколлинеарные,  для этого необходимо чтобы их соответствующие координаты были непропроциональные 
x/x1  = y/y1 = z/z1

 
Спецификации программных функций
Процедуры:
1) Ввод координат точек
2) Удаление точек
3) Вычисление длин векторов прямых
4) Условие пересечения прямых
5) Изображение прямых
1) Вводим координаты точек x, y, z пока переменная k != -1 после каждой координаты (x, y, z) нажимаем клавишу enter, диапазон значений от [-250, 250].
2) Вводим индекс удаляемой точки(x, y, z), индексы точек будут показаны в консоли, индекс не должен превышать макс кол-во точек.
5) Для изображения прямых, вводим координаты min точек(x, y) 1-й, 2-ой и координаты max точек(x, y) 1-й, 2-ой, диапазон значений от [-250, 250].
 

Анализ методов тестирования черным ящиком
Приёмы тестирования черным ящиком:
1. Эквивалентное разбиение
2. Анализ граничных условий
3. Анализ причинно-следственных связей
4. Предположение об ошибке
1. Ввод координат точек
1) Метод эквивалентного разбиения:
Процедура ввода координат точек, существует 1 правильный класс – значения лежат в диапазоне от [-250, 250] и 
2 не правильных, если a <= [-250, 250] <= b, неправильный класс a, если значение меньше заданного диапазона и класс b, если значение больше заданного диапазона.
2) Анализ граничных значений:
Проверяем -250, 250, -250.000001, 250.000001

3) Анализ причинно-следственных связей:
Причина – входные данные должные находиться в диапазоне от [-250, 250]
Следствие - выходные данные должные находиться в диапазоне от [-250, 250]
Причины	Следствие
значение буква	не подходит
значение цифра < указанного диапазона	не подходит
значение цифра > указанного диапазона	не подходит
значение цифра в указанном диапазоне 	подходит

4) Предположение об ошибке:
Ошибки во входных данных
2. Удаление точек
1) Метод эквивалентного разбиения:
Процедура удаления точек, существует 1 правильный класс – значения лежа в диапазоне от [0,  n), где n макс кол-во точек, 
и 2 не правильных, если a <= (0, n) <= b, неправильный класс a, если значение меньше заданного диапазона и класс b, если значение больше заданного диапазона.
2) Анализ граничных значений:
Проверяем -1 , n + 1;
3) Анализ причинно-следственных связей:
Причина – входные данные должные находиться в диапазоне от [0, n)
Следствие - выходные данные должные находиться в диапазоне от [0, n)
Причины	Следствие
значение буква	не подходит
значение цифра < указанного диапазона	не подходит
значение цифра > указанного диапазона	не подходит
значение цифра в указанном диапазоне 	подходит

4) Предположение об ошибке:
Ошибки во входных данных	
3. Изображение прямых
Процедура ввода координат точек, существует 1 правильный класс – значения лежат в диапазоне от [-250, 250] и 2 не правильных, 
если a <= [-250, 250] <= b, неправильный класс a, если значение меньше заданного диапазона и класс b, если значение больше заданного диапазона.
3) Анализ причинно-следственных связей:
Причина – входные данные должные находиться в диапазоне от [-250, 250]
Следствие - выходные данные должные находиться в диапазоне от [-250, 250]
Причины	Следствие
значение буква	не подходит
значение цифра < указанного диапазона	не подходит
значение цифра > указанного диапазона	не подходит
значение цифра в указанном диапазоне 	подходит

4) Предположение об ошибке:
Ошибки во входных данных
Тест-кейсы для тестирование программы с применением методов черного ящика

1. Ввод координат точек
1) Метод эквивалентного разбиения:
Процедура ввода координат точек, существует 1 правильный класс – значения лежат в диапазоне от [-250, 250] и 2 не правильных,
если a <= [-250, 250] <= b, неправильный класс a, если значение меньше заданного диапазона и класс b, если значение больше заданного диапазона.
2) Анализ граничных значений:
Проверяем -250, 250, -250.000001, 250.000001

2. Удаление точек
3) Анализ причинно-следственных связей:
Причина – входные данные должные находиться в диапазоне от [0, n]
Следствие - выходные данные должные находиться в диапазоне от [0, n]
Причины	Следствие
значение буква	не подходит
значение цифра < указанного диапазона	не подходит
значение цифра > указанного диапазона	не подходит
значение цифра в указанном диапазоне 	подходит

3. Изображение прямых
4) Предположение об ошибке:
Ошибки во входных данных

Тест-кейсы:
1. id 1 (для ввода координат точек)
Idea: значение входного параметра координаты точки должно находится в диапазоне [-250, 250].
PreCondi1tions: значение должно быть числом а не буквой
Test Case Description: ввод значение, проверка его число или буква, при условии что это число, ввести ограничения диапазона [-250, 250], 
при условии что буква повторно запросить значение.
Expected Result: после выполнение шагов мы увидим какие из значений являются подходящими, а какие нет.
PostCondition: повторный вызов метода.
2. id 2 (для ввода координат точек)
Idea: проверка граничных значений диапазона [-250, 250], значения следующие -250, 250, -250.000001, 250.000001, 
PreConditions: значение должно быть числом а не буквой
Test Case Description: ввод значение, проверка его число или буква, при условии что это число, ввести значения -250, 250, -250.000001, 250.000001 
при условии что буква повторно запросить значение.
Expected Result: после выполнение шагов мы увидим правильно ли функционирует процедура
PostCondition: повторный вызов метода.
3. id 3 (для удаления точки)
Idea: значение входного параметра номер точки должно находится в диапазоне [0, n].
PreCondiltions: значение должно быть числом а не буквой
Test Case Description: ввод значение, проверка его число или буква, при условии что это число, ввести ограничения диапазона [0, n], 
при условии что буква повторно запросить значение.
Expected Result: после выполнение шагов мы увидим какие из значений являются подходящими, а какие нет.
PostCondition: повторный вызов метода. 
